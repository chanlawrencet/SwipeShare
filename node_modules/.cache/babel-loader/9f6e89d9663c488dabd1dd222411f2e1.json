{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencechan/coding/SwipeShare/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Cards from './Cards';\nimport cookie from 'react-cookies';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitEmail = () => {\n      const enteredEmail = this.state.enteredEmail;\n\n      if (this.isValidEmail(enteredEmail)) {\n        this.setState({\n          showSuccessMessage: true\n        });\n      } else {\n        this.setState({\n          showInvalidMessage: true\n        });\n        return false;\n      }\n\n      const body = {\n        email: enteredEmail\n      };\n      fetch('https://swipeshareapi.herokuapp.com/sendcode', {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.status).then(status => {\n        if (status !== 200) {\n          console.log('big bad');\n        }\n      }).catch(x => {\n        console.log('no data', x);\n        return 'no data';\n      });\n      const success = true;\n\n      if (success) {\n        this.setState({\n          showCodeField: true,\n          enteredCode: ''\n        });\n      }\n    };\n\n    this.submitCode = () => {\n      const _this$state = this.state,\n            enteredCode = _this$state.enteredCode,\n            enteredEmail = _this$state.enteredEmail;\n\n      if (!this.isValidEmail(enteredEmail)) {\n        this.setState({\n          showInvalidMessage: true\n        });\n        return false;\n      }\n\n      const body = {\n        email: enteredEmail,\n        code: enteredCode\n      };\n      fetch('https://swipeshareapi.herokuapp.com/login', {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.status).then(status => {\n        if (status === 200) {\n          this.setState({\n            userEmail: enteredEmail,\n            userVerified: true,\n            showLogin: false,\n            enteredEmail: '',\n            enteredCode: ''\n          });\n          cookie.save('email', enteredEmail, {\n            path: '/'\n          });\n          cookie.save('verified', true, {\n            path: '/'\n          });\n        } else {\n          console.log('WRONG CODE');\n        }\n      }).catch(x => {\n        console.log('no data', x);\n        return 'no data';\n      });\n      console.log(enteredCode);\n    };\n\n    this.isValidEmail = enteredEmail => {\n      const length = enteredEmail.length;\n      return enteredEmail.substring(length - 10, length) === '@tufts.edu';\n    };\n\n    this.handleCloseGiverForm = () => {\n      this.setState({\n        showGiverForm: false\n      });\n    };\n\n    this.state = {\n      hello: 'world',\n      userEmail: cookie.load('email') ? cookie.load('email') : '',\n      userVerified: cookie.load('verified') ? cookie.load('verified') : false,\n      cards: [{\n        location: 'carmichael',\n        time: '10pm'\n      }, {\n        location: 'carmichael',\n        time: '10pm'\n      }, {\n        location: 'carmichael',\n        time: '10pm'\n      }, {\n        location: 'carmichael',\n        time: '10pm'\n      }, {\n        location: 'hodgdon',\n        time: '10pm'\n      }],\n      showLogin: false,\n      enteredEmail: '',\n      enteredCode: '',\n      enteredDate: new Date(),\n      showLoginMessage: false,\n      showInvalidMessage: false,\n      showSuccessMessage: false,\n      showCodeField: true,\n      showGiverForm: false,\n      enteredDiningHall: ''\n    };\n  }\n\n  loginWindow() {\n    const _this$state2 = this.state,\n          enteredEmail = _this$state2.enteredEmail,\n          enteredCode = _this$state2.enteredCode,\n          showCodeField = _this$state2.showCodeField;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"outlined-email-input\",\n      label: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      autoComplete: \"email\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      style: {\n        width: 450\n      },\n      value: enteredEmail,\n      onChange: e => this.setState({\n        enteredEmail: e.target.value,\n        showInvalidMessage: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), showCodeField ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"outlined-email-input\",\n      label: \"Code\",\n      name: \"code\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      style: {\n        width: 450\n      },\n      value: enteredCode,\n      onChange: e => this.setState({\n        enteredCode: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginLeft: 320,\n        cursor: 'pointer',\n        textDecoration: 'underline'\n      },\n      onClick: () => this.setState({\n        showCodeField: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Don't have a code?\")) : null, showCodeField ? React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      onClick: this.submitCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"submit\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginLeft: 300,\n        cursor: 'pointer',\n        textDecoration: 'underline'\n      },\n      onClick: () => this.setState({\n        showCodeField: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Have a code already?\"), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      onClick: this.submitEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"send code\")));\n  } // componentDidUpdate(prevProps, prevState, snapshot) {\n  //     this.setState({\n  //         userEmail: cookie.load('email') ?  cookie.load('email') : '',\n  //         userVerified: cookie.load('verified') ? cookie.load('verified') : false,\n  //     })\n  // }\n\n\n  render() {\n    const _this$state3 = this.state,\n          userVerified = _this$state3.userVerified,\n          userEmail = _this$state3.userEmail,\n          enteredDate = _this$state3.enteredDate,\n          showLogin = _this$state3.showLogin,\n          showLoginMessage = _this$state3.showLoginMessage,\n          showInvalidMessage = _this$state3.showInvalidMessage,\n          showSuccessMessage = _this$state3.showSuccessMessage,\n          showGiverForm = _this$state3.showGiverForm,\n          enteredDiningHall = _this$state3.enteredDiningHall;\n    console.log(userVerified, userEmail);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        fontSize: 50,\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Swipe Share\"), React.createElement(\"div\", {\n      style: {\n        fontSize: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"A way to share your mealswipes!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), userEmail ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Logged in as \", userEmail, \".\"), React.createElement(Button, {\n      onClick: () => {\n        this.setState({\n          userEmail: '',\n          userVerified: false\n        });\n        cookie.remove('email', {\n          path: '/'\n        });\n        cookie.remove('verified', {\n          path: '/'\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Logout\")) : React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => this.setState({\n        showLogin: !showLogin\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"login\"), showLogin ? this.loginWindow() : null, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => {\n        if (!userVerified) {\n          console.log(\"NOT ALLOWED\");\n          this.setState({\n            showLoginMessage: true\n          });\n          return;\n        }\n\n        this.setState({\n          showGiverForm: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Give a swipe\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(Cards, {\n      userVerified: userVerified,\n      userEmail: userEmail,\n      showLoginM: () => this.setState({\n        showLoginMessage: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(Dialog, {\n      fullWidth: true,\n      open: showGiverForm,\n      onClose: this.handleCloseGiverForm,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      style: {\n        fontSize: 100\n      },\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Give a mealswipe!\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Please enter the information below:\"), React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Dining Hall\"), React.createElement(Select, {\n      style: {\n        width: 200\n      },\n      value: enteredDiningHall,\n      onChange: e => this.setState({\n        enteredDiningHall: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"carmichael\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Carmichael\"), React.createElement(MenuItem, {\n      value: \"dewick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Dewick\"), React.createElement(MenuItem, {\n      value: \"hodgdon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Hodgdon\"))), React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(KeyboardDatePicker, {\n      style: {\n        fontsize: 20\n      },\n      disableToolbar: true,\n      disablePast: true,\n      variant: \"inline\",\n      format: \"MM/dd/yyyy\",\n      margin: \"normal\",\n      id: \"date-picker-inline\",\n      label: \"Date\",\n      value: enteredDate,\n      onChange: newDate => this.setState({\n        enteredDate: newDate\n      }),\n      KeyboardButtonProps: {\n        'aria-label': 'change date'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), React.createElement(KeyboardTimePicker, {\n      margin: \"normal\",\n      id: \"time-picker\",\n      label: \"Time\",\n      value: enteredDate,\n      onChange: newDate => this.setState({\n        enteredDate: newDate\n      }),\n      KeyboardButtonProps: {\n        'aria-label': 'change time'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleCloseGiverForm,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: () => {\n        const body = {\n          giver_email: userEmail\n        };\n        fetch('https://swipeshareapi.herokuapp.com/sendcode', {\n          method: 'POST',\n          body: JSON.stringify(body),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => response.status).then(status => {\n          if (status !== 200) {\n            console.log('big bad');\n          }\n        }).catch(x => {\n          console.log('no data', x);\n          return 'no data';\n        });\n      },\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(Snackbar, {\n      variant: \"error\",\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: showInvalidMessage,\n      onClose: () => this.setState({\n        showInvalidMessage: false\n      }),\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      autoHideDuration: 6000,\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Not a @tufts.edu address!\"),\n      action: [React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        onClick: () => this.setState({\n          showInvalidMessage: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), React.createElement(Snackbar, {\n      variant: \"error\",\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: showSuccessMessage,\n      onClose: () => this.setState({\n        showSuccessMessage: false\n      }),\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      autoHideDuration: 6000,\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"Check your email for a code!\"),\n      action: [React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        onClick: () => this.setState({\n          showSuccessMessage: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }), React.createElement(Snackbar, {\n      variant: \"error\",\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: showLoginMessage,\n      onClose: () => this.setState({\n        showLoginMessage: false\n      }),\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      autoHideDuration: 6000,\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"Please log in first!\"),\n      action: [React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        onClick: () => this.setState({\n          showLoginMessage: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"Made with \", React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"\\u2764\\uFE0F\"), \"at Polyhack 2019\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lawrencechan/coding/SwipeShare/src/App.js"],"names":["React","Button","TextField","Snackbar","IconButton","CloseIcon","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","InputLabel","Select","MenuItem","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","DateFnsUtils","Grid","Cards","cookie","App","Component","constructor","props","submitEmail","enteredEmail","state","isValidEmail","setState","showSuccessMessage","showInvalidMessage","body","email","fetch","method","JSON","stringify","headers","then","response","status","console","log","catch","x","success","showCodeField","enteredCode","submitCode","code","userEmail","userVerified","showLogin","save","path","length","substring","handleCloseGiverForm","showGiverForm","hello","load","cards","location","time","enteredDate","Date","showLoginMessage","enteredDiningHall","loginWindow","width","e","target","value","marginLeft","cursor","textDecoration","render","fontSize","marginTop","remove","fontsize","newDate","giver_email","vertical","horizontal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SACIC,uBADJ,EAEIC,kBAFJ,EAGIC,kBAHJ,QAIO,sBAJP;AAKA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,MAAMC,GAAN,SAAkBrB,KAAK,CAACsB,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA0ClBC,WA1CkB,GA0CJ,MAAM;AAAA,YACTC,YADS,GACO,KAAKC,KADZ,CACTD,YADS;;AAEhB,UAAI,KAAKE,YAAL,CAAkBF,YAAlB,CAAJ,EAAoC;AAChC,aAAKG,QAAL,CAAc;AACVC,UAAAA,kBAAkB,EAAE;AADV,SAAd;AAGH,OAJD,MAIO;AACH,aAAKD,QAAL,CAAc;AACVE,UAAAA,kBAAkB,EAAE;AADV,SAAd;AAGA,eAAO,KAAP;AACH;;AACD,YAAMC,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAEP;AADE,OAAb;AAGAQ,MAAAA,KAAK,CAAC,8CAAD,EACD;AAACC,QAAAA,MAAM,EAAC,MAAR;AACIH,QAAAA,IAAI,EAACI,IAAI,CAACC,SAAL,CAAeL,IAAf,CADT;AAEIM,QAAAA,OAAO,EAAE;AACT,0BAAgB;AADP;AAFb,OADC,CAAL,CAMKC,IANL,CAMUC,QAAQ,IAAIA,QAAQ,CAACC,MAN/B,EAOKF,IAPL,CAOUE,MAAM,IAAI;AACZ,YAAIA,MAAM,KAAK,GAAf,EAAmB;AACfC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AACJ,OAXL,EAWOC,KAXP,CAWaC,CAAC,IAAI;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,CAAvB;AACA,eAAO,SAAP;AACH,OAdD;AAgBA,YAAMC,OAAO,GAAG,IAAhB;;AACA,UAAIA,OAAJ,EAAY;AACR,aAAKjB,QAAL,CAAc;AAACkB,UAAAA,aAAa,EAAC,IAAf;AAAqBC,UAAAA,WAAW,EAAE;AAAlC,SAAd;AACH;AACJ,KA7EiB;;AAAA,SAgFlBC,UAhFkB,GAgFL,MAAM;AAAA,0BACqB,KAAKtB,KAD1B;AAAA,YACRqB,WADQ,eACRA,WADQ;AAAA,YACKtB,YADL,eACKA,YADL;;AAEf,UAAI,CAAC,KAAKE,YAAL,CAAkBF,YAAlB,CAAL,EAAqC;AACjC,aAAKG,QAAL,CAAc;AACVE,UAAAA,kBAAkB,EAAE;AADV,SAAd;AAGA,eAAO,KAAP;AACH;;AACD,YAAMC,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAEP,YADE;AAETwB,QAAAA,IAAI,EAAEF;AAFG,OAAb;AAIAd,MAAAA,KAAK,CAAC,2CAAD,EACD;AAACC,QAAAA,MAAM,EAAC,MAAR;AACIH,QAAAA,IAAI,EAACI,IAAI,CAACC,SAAL,CAAeL,IAAf,CADT;AAEIM,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAFb,OADC,CAAL,CAMKC,IANL,CAMUC,QAAQ,IAAIA,QAAQ,CAACC,MAN/B,EAOKF,IAPL,CAOUE,MAAM,IAAI;AACZ,YAAIA,MAAM,KAAK,GAAf,EAAmB;AACf,eAAKZ,QAAL,CAAc;AACVsB,YAAAA,SAAS,EAAEzB,YADD;AAEV0B,YAAAA,YAAY,EAAE,IAFJ;AAGVC,YAAAA,SAAS,EAAE,KAHD;AAIV3B,YAAAA,YAAY,EAAE,EAJJ;AAKVsB,YAAAA,WAAW,EAAE;AALH,WAAd;AAOA5B,UAAAA,MAAM,CAACkC,IAAP,CAAY,OAAZ,EAAqB5B,YAArB,EAAmC;AAAE6B,YAAAA,IAAI,EAAE;AAAR,WAAnC;AACAnC,UAAAA,MAAM,CAACkC,IAAP,CAAY,UAAZ,EAAwB,IAAxB,EAA8B;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAA9B;AACH,SAVD,MAUO;AACHb,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;AACJ,OArBL,EAqBOC,KArBP,CAqBaC,CAAC,IAAI;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,CAAvB;AACA,eAAO,SAAP;AACH,OAxBD;AAyBAH,MAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;AACH,KAtHiB;;AAAA,SAwHlBpB,YAxHkB,GAwHHF,YAAY,IAAI;AAC3B,YAAM8B,MAAM,GAAG9B,YAAY,CAAC8B,MAA5B;AACA,aAAO9B,YAAY,CAAC+B,SAAb,CAAuBD,MAAM,GAAG,EAAhC,EAAoCA,MAApC,MAAgD,YAAvD;AACH,KA3HiB;;AAAA,SAoLlBE,oBApLkB,GAoLK,MAAM;AACzB,WAAK7B,QAAL,CAAc;AAAC8B,QAAAA,aAAa,EAAE;AAAhB,OAAd;AACH,KAtLiB;;AAEd,SAAKhC,KAAL,GAAa;AACTiC,MAAAA,KAAK,EAAE,OADE;AAETT,MAAAA,SAAS,EAAE/B,MAAM,CAACyC,IAAP,CAAY,OAAZ,IAAwBzC,MAAM,CAACyC,IAAP,CAAY,OAAZ,CAAxB,GAA+C,EAFjD;AAGTT,MAAAA,YAAY,EAAEhC,MAAM,CAACyC,IAAP,CAAY,UAAZ,IAA0BzC,MAAM,CAACyC,IAAP,CAAY,UAAZ,CAA1B,GAAoD,KAHzD;AAITC,MAAAA,KAAK,EAAE,CACH;AACIC,QAAAA,QAAQ,EAAE,YADd;AAEIC,QAAAA,IAAI,EAAE;AAFV,OADG,EAKH;AACID,QAAAA,QAAQ,EAAE,YADd;AAEIC,QAAAA,IAAI,EAAE;AAFV,OALG,EASH;AACID,QAAAA,QAAQ,EAAE,YADd;AAEIC,QAAAA,IAAI,EAAE;AAFV,OATG,EAaH;AACID,QAAAA,QAAQ,EAAE,YADd;AAEIC,QAAAA,IAAI,EAAE;AAFV,OAbG,EAiBH;AACID,QAAAA,QAAQ,EAAE,SADd;AAEIC,QAAAA,IAAI,EAAE;AAFV,OAjBG,CAJE;AA0BTX,MAAAA,SAAS,EAAE,KA1BF;AA2BT3B,MAAAA,YAAY,EAAE,EA3BL;AA4BTsB,MAAAA,WAAW,EAAE,EA5BJ;AA6BTiB,MAAAA,WAAW,EAAE,IAAIC,IAAJ,EA7BJ;AA8BTC,MAAAA,gBAAgB,EAAE,KA9BT;AA+BTpC,MAAAA,kBAAkB,EAAE,KA/BX;AAgCTD,MAAAA,kBAAkB,EAAE,KAhCX;AAiCTiB,MAAAA,aAAa,EAAE,IAjCN;AAkCTY,MAAAA,aAAa,EAAE,KAlCN;AAmCTS,MAAAA,iBAAiB,EAAE;AAnCV,KAAb;AAqCH;;AAsFDC,EAAAA,WAAW,GAAE;AAAA,yBAC0C,KAAK1C,KAD/C;AAAA,UACFD,YADE,gBACFA,YADE;AAAA,UACYsB,WADZ,gBACYA,WADZ;AAAA,UACyBD,aADzB,gBACyBA,aADzB;AAET,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,EAAE,EAAC,sBAFP;AAGI,MAAA,KAAK,EAAC,OAHV;AAII,MAAA,IAAI,EAAC,OAJT;AAKI,MAAA,IAAI,EAAC,OALT;AAMI,MAAA,YAAY,EAAC,OANjB;AAOI,MAAA,MAAM,EAAC,QAPX;AAQI,MAAA,OAAO,EAAC,UARZ;AASI,MAAA,KAAK,EAAE;AAACuB,QAAAA,KAAK,EAAE;AAAR,OATX;AAUI,MAAA,KAAK,EAAE5C,YAVX;AAWI,MAAA,QAAQ,EAAE6C,CAAC,IAAI,KAAK1C,QAAL,CAAc;AAACH,QAAAA,YAAY,EAAE6C,CAAC,CAACC,MAAF,CAASC,KAAxB;AAA+B1C,QAAAA,kBAAkB,EAAE;AAAnD,OAAd,CAXnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,EAeKgB,aAAa,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,EAAE,EAAC,sBAFP;AAGI,MAAA,KAAK,EAAC,MAHV;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,MAAM,EAAC,QALX;AAMI,MAAA,OAAO,EAAC,UANZ;AAOI,MAAA,KAAK,EAAE;AAACuB,QAAAA,KAAK,EAAE;AAAR,OAPX;AAQI,MAAA,KAAK,EAAEtB,WARX;AASI,MAAA,QAAQ,EAAEuB,CAAC,IAAI,KAAK1C,QAAL,CAAc;AAACmB,QAAAA,WAAW,EAAEuB,CAAC,CAACC,MAAF,CAASC;AAAvB,OAAd,CATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAaI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAC,GAAZ;AAAkBC,QAAAA,MAAM,EAAE,SAA1B;AAAqCC,QAAAA,cAAc,EAAE;AAArD,OAAZ;AAA+E,MAAA,OAAO,EAAE,MAAM,KAAK/C,QAAL,CAAc;AAACkB,QAAAA,aAAa,EAAE;AAAhB,OAAd,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAbJ,CADU,GAgBV,IA/BR,EAgCKA,aAAa,GACV,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,WAA9B;AAA0C,MAAA,OAAO,EAAE,KAAKE,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADU,GAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACyB,QAAAA,UAAU,EAAC,GAAZ;AAAkBC,QAAAA,MAAM,EAAE,SAA1B;AAAqCC,QAAAA,cAAc,EAAE;AAArD,OAAZ;AAA+E,MAAA,OAAO,EAAE,MAAM,KAAK/C,QAAL,CAAc;AAACkB,QAAAA,aAAa,EAAE;AAAhB,OAAd,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,WAA9B;AAA0C,MAAA,OAAO,EAAE,KAAKtB,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CAlCR,CADJ;AA4CH,GA5K4B,CA8K7B;AACA;AACA;AACA;AACA;AACA;;;AAMAoD,EAAAA,MAAM,GAAE;AAAA,yBACkJ,KAAKlD,KADvJ;AAAA,UACGyB,YADH,gBACGA,YADH;AAAA,UACiBD,SADjB,gBACiBA,SADjB;AAAA,UAC4Bc,WAD5B,gBAC4BA,WAD5B;AAAA,UACyCZ,SADzC,gBACyCA,SADzC;AAAA,UACoDc,gBADpD,gBACoDA,gBADpD;AAAA,UACsEpC,kBADtE,gBACsEA,kBADtE;AAAA,UAC0FD,kBAD1F,gBAC0FA,kBAD1F;AAAA,UAC8G6B,aAD9G,gBAC8GA,aAD9G;AAAA,UAC6HS,iBAD7H,gBAC6HA,iBAD7H;AAEJ1B,IAAAA,OAAO,CAACC,GAAR,CAAYS,YAAZ,EAA0BD,SAA1B;AACA,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAAC2B,QAAAA,QAAQ,EAAC,EAAV;AAAcC,QAAAA,SAAS,EAAC;AAAxB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAK,MAAA,KAAK,EAAE;AAACD,QAAAA,QAAQ,EAAC;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAIK3B,SAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmBA,SAAnB,MADS,EAET,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnB,aAAKtB,QAAL,CAAc;AAACsB,UAAAA,SAAS,EAAE,EAAZ;AAAgBC,UAAAA,YAAY,EAAE;AAA9B,SAAd;AACAhC,QAAAA,MAAM,CAAC4D,MAAP,CAAc,OAAd,EAAuB;AAAEzB,UAAAA,IAAI,EAAE;AAAR,SAAvB;AACAnC,QAAAA,MAAM,CAAC4D,MAAP,CAAc,UAAd,EAA0B;AAAEzB,UAAAA,IAAI,EAAE;AAAR,SAA1B;AACH,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFS,CAAH,GAOD,oBAAC,MAAD;AAAS,MAAA,OAAO,EAAC,WAAjB;AAA6B,MAAA,OAAO,EAAE,MAAM,KAAK1B,QAAL,CAAc;AAACwB,QAAAA,SAAS,EAAE,CAACA;AAAb,OAAd,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXb,EAaKA,SAAS,GAAG,KAAKgB,WAAL,EAAH,GAAwB,IAbtC,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,EAgBI,oBAAC,MAAD;AAAS,MAAA,OAAO,EAAC,WAAjB;AAA6B,MAAA,OAAO,EAAE,MAAM;AACxC,YAAI,CAACjB,YAAL,EAAkB;AACdV,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,eAAKd,QAAL,CAAc;AAACsC,YAAAA,gBAAgB,EAAE;AAAnB,WAAd;AACA;AACH;;AACD,aAAKtC,QAAL,CAAc;AAAC8B,UAAAA,aAAa,EAAE;AAAhB,SAAd;AACE,OAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBJ,EAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBJ,EAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBJ,EA0BI,oBAAC,KAAD;AAAO,MAAA,YAAY,EAAEP,YAArB;AAAmC,MAAA,SAAS,EAAED,SAA9C;AAAyD,MAAA,UAAU,EAAE,MAAM,KAAKtB,QAAL,CAAc;AAACsC,QAAAA,gBAAgB,EAAE;AAAnB,OAAd,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BJ,EA2BI,oBAAC,MAAD;AAAQ,MAAA,SAAS,MAAjB;AAAkB,MAAA,IAAI,EAAER,aAAxB;AAAuC,MAAA,OAAO,EAAE,KAAKD,oBAArD;AAA2E,yBAAgB,mBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAACoB,QAAAA,QAAQ,EAAE;AAAX,OAApB;AAAqC,MAAA,EAAE,EAAC,mBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,EAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,EAKI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAE;AAACR,QAAAA,KAAK,EAAC;AAAP,OADX;AAEI,MAAA,KAAK,EAAEF,iBAFX;AAGI,MAAA,QAAQ,EAAEG,CAAC,IAAI,KAAK1C,QAAL,CAAc;AAACuC,QAAAA,iBAAiB,EAAEG,CAAC,CAACC,MAAF,CAASC;AAA7B,OAAd,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,EAMI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,EAOI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPJ,CALJ,CAFJ,EAiBI,oBAAC,uBAAD;AAAyB,MAAA,KAAK,EAAExD,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,kBAAD;AACI,MAAA,KAAK,EAAE;AAACgE,QAAAA,QAAQ,EAAE;AAAX,OADX;AAEI,MAAA,cAAc,MAFlB;AAGI,MAAA,WAAW,MAHf;AAII,MAAA,OAAO,EAAC,QAJZ;AAKI,MAAA,MAAM,EAAC,YALX;AAMI,MAAA,MAAM,EAAC,QANX;AAOI,MAAA,EAAE,EAAC,oBAPP;AAQI,MAAA,KAAK,EAAC,MARV;AASI,MAAA,KAAK,EAAEhB,WATX;AAUI,MAAA,QAAQ,EAAEiB,OAAO,IAAI,KAAKrD,QAAL,CAAc;AAACoC,QAAAA,WAAW,EAAEiB;AAAd,OAAd,CAVzB;AAWI,MAAA,mBAAmB,EAAE;AACjB,sBAAc;AADG,OAXzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,EAiBI,oBAAC,kBAAD;AACI,MAAA,MAAM,EAAC,QADX;AAEI,MAAA,EAAE,EAAC,aAFP;AAGI,MAAA,KAAK,EAAC,MAHV;AAII,MAAA,KAAK,EAAEjB,WAJX;AAKI,MAAA,QAAQ,EAAEiB,OAAO,IAAI,KAAKrD,QAAL,CAAc;AAACoC,QAAAA,WAAW,EAAEiB;AAAd,OAAd,CALzB;AAMI,MAAA,mBAAmB,EAAE;AACjB,sBAAc;AADG,OANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,CADJ,CAjBJ,EA+CI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKxB,oBAAtB;AAA4C,MAAA,KAAK,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnB,cAAM1B,IAAI,GAAG;AACTmD,UAAAA,WAAW,EAAEhC;AADJ,SAAb;AAIAjB,QAAAA,KAAK,CAAC,8CAAD,EACD;AAACC,UAAAA,MAAM,EAAC,MAAR;AACIH,UAAAA,IAAI,EAACI,IAAI,CAACC,SAAL,CAAeL,IAAf,CADT;AAEIM,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AAFb,SADC,CAAL,CAMKC,IANL,CAMUC,QAAQ,IAAIA,QAAQ,CAACC,MAN/B,EAOKF,IAPL,CAOUE,MAAM,IAAI;AACZ,cAAIA,MAAM,KAAK,GAAf,EAAmB;AACfC,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AACJ,SAXL,EAWOC,KAXP,CAWaC,CAAC,IAAI;AACdH,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,CAAvB;AACA,iBAAO,SAAP;AACH,SAdD;AAeH,OApBD;AAoBG,MAAA,KAAK,EAAC,SApBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CA/CJ,CA3BJ,EAuGI,oBAAC,QAAD;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,YAAY,EAAE;AACVuC,QAAAA,QAAQ,EAAE,QADA;AAEVC,QAAAA,UAAU,EAAE;AAFF,OAFlB;AAMI,MAAA,IAAI,EAAEtD,kBANV;AAOI,MAAA,OAAO,EAAE,MAAM,KAAKF,QAAL,CAAc;AAACE,QAAAA,kBAAkB,EAAE;AAArB,OAAd,CAPnB;AAQI,MAAA,YAAY,EAAE;AACV,4BAAoB;AADV,OARlB;AAWI,MAAA,gBAAgB,EAAE,IAXtB;AAYI,MAAA,OAAO,EAAE;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAZb;AAaI,MAAA,MAAM,EAAE,CACJ,oBAAC,UAAD;AACI,QAAA,GAAG,EAAC,OADR;AAEI,sBAAW,OAFf;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,OAAO,EAAE,MAAM,KAAKF,QAAL,CAAc;AAACE,UAAAA,kBAAkB,EAAE;AAArB,SAAd,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADI,CAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvGJ,EA+HI,oBAAC,QAAD;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,YAAY,EAAE;AACVqD,QAAAA,QAAQ,EAAE,QADA;AAEVC,QAAAA,UAAU,EAAE;AAFF,OAFlB;AAMI,MAAA,IAAI,EAAEvD,kBANV;AAOI,MAAA,OAAO,EAAE,MAAM,KAAKD,QAAL,CAAc;AAACC,QAAAA,kBAAkB,EAAE;AAArB,OAAd,CAPnB;AAQI,MAAA,YAAY,EAAE;AACV,4BAAoB;AADV,OARlB;AAWI,MAAA,gBAAgB,EAAE,IAXtB;AAYI,MAAA,OAAO,EAAE;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAZb;AAcI,MAAA,MAAM,EAAE,CACJ,oBAAC,UAAD;AACI,QAAA,GAAG,EAAC,OADR;AAEI,sBAAW,OAFf;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,OAAO,EAAE,MAAM,KAAKD,QAAL,CAAc;AAACC,UAAAA,kBAAkB,EAAE;AAArB,SAAd,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADI,CAdZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/HJ,EAwJI,oBAAC,QAAD;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,YAAY,EAAE;AACVsD,QAAAA,QAAQ,EAAE,QADA;AAEVC,QAAAA,UAAU,EAAE;AAFF,OAFlB;AAMI,MAAA,IAAI,EAAElB,gBANV;AAOI,MAAA,OAAO,EAAE,MAAM,KAAKtC,QAAL,CAAc;AAACsC,QAAAA,gBAAgB,EAAE;AAAnB,OAAd,CAPnB;AAQI,MAAA,YAAY,EAAE;AACV,4BAAoB;AADV,OARlB;AAWI,MAAA,gBAAgB,EAAE,IAXtB;AAYI,MAAA,OAAO,EAAE;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAZb;AAaI,MAAA,MAAM,EAAE,CACJ,oBAAC,UAAD;AACI,QAAA,GAAG,EAAC,OADR;AAEI,sBAAW,OAFf;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,OAAO,EAAE,MAAM,KAAKtC,QAAL,CAAc;AAACsC,UAAAA,gBAAgB,EAAE;AAAnB,SAAd,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADI,CAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxJJ,EAgLI;AAAK,MAAA,KAAK,EAAE;AAACY,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAuC;AAAM,MAAA,IAAI,EAAC,KAAX;AAAiB,oBAAW,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAvC,qBAhLJ,CADJ;AAoLH;;AAhX4B;;AAkXjC,eAAe1D,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\"\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Cards from './Cards'\nimport cookie from 'react-cookies'\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hello: 'world',\n            userEmail: cookie.load('email') ?  cookie.load('email') : '',\n            userVerified: cookie.load('verified') ? cookie.load('verified') : false,\n            cards: [\n                {\n                    location: 'carmichael',\n                    time: '10pm'\n                },\n                {\n                    location: 'carmichael',\n                    time: '10pm'\n                },\n                {\n                    location: 'carmichael',\n                    time: '10pm'\n                },\n                {\n                    location: 'carmichael',\n                    time: '10pm'\n                },\n                {\n                    location: 'hodgdon',\n                    time: '10pm'\n                }\n            ],\n            showLogin: false,\n            enteredEmail: '',\n            enteredCode: '',\n            enteredDate: new Date(),\n            showLoginMessage: false,\n            showInvalidMessage: false,\n            showSuccessMessage: false,\n            showCodeField: true,\n            showGiverForm: false,\n            enteredDiningHall: ''\n        };\n    }\n\n\n    submitEmail = () => {\n        const {enteredEmail} = this.state\n        if (this.isValidEmail(enteredEmail)){\n            this.setState({\n                showSuccessMessage: true\n            })\n        } else {\n            this.setState({\n                showInvalidMessage: true\n            });\n            return false;\n        }\n        const body = {\n            email: enteredEmail\n        };\n        fetch('https://swipeshareapi.herokuapp.com/sendcode',\n            {method:'POST',\n                body:JSON.stringify(body),\n                headers: {\n                'Content-Type': 'application/json'\n            }})\n            .then(response => response.status)\n            .then(status => {\n                if (status !== 200){\n                    console.log('big bad')\n                }\n            }).catch(x => {\n            console.log('no data', x)\n            return('no data')\n        })\n\n        const success = true;\n        if (success){\n            this.setState({showCodeField:true, enteredCode: ''})\n        }\n    }\n\n\n    submitCode = () => {\n        const {enteredCode, enteredEmail} = this.state\n        if (!this.isValidEmail(enteredEmail)){\n            this.setState({\n                showInvalidMessage: true\n            });\n            return false;\n        }\n        const body = {\n            email: enteredEmail,\n            code: enteredCode\n        };\n        fetch('https://swipeshareapi.herokuapp.com/login',\n            {method:'POST',\n                body:JSON.stringify(body),\n                headers: {\n                    'Content-Type': 'application/json'\n                }})\n            .then(response => response.status)\n            .then(status => {\n                if (status === 200){\n                    this.setState({\n                        userEmail: enteredEmail,\n                        userVerified: true,\n                        showLogin: false,\n                        enteredEmail: '',\n                        enteredCode: ''\n                    });\n                    cookie.save('email', enteredEmail, { path: '/' })\n                    cookie.save('verified', true, { path: '/' })\n                } else {\n                    console.log('WRONG CODE')\n                }\n            }).catch(x => {\n            console.log('no data', x)\n            return('no data')\n        })\n        console.log(enteredCode)\n    };\n\n    isValidEmail = enteredEmail => {\n        const length = enteredEmail.length;\n        return enteredEmail.substring(length - 10, length) === '@tufts.edu'\n    };\n\n    loginWindow(){\n        const {enteredEmail, enteredCode, showCodeField} = this.state\n        return(\n            <div>\n                <TextField\n                    required\n                    id=\"outlined-email-input\"\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    style={{width: 450}}\n                    value={enteredEmail}\n                    onChange={e => this.setState({enteredEmail: e.target.value, showInvalidMessage: false})}\n                />\n                <br/>\n                {showCodeField ? (\n                    <div>\n                        <TextField\n                            required\n                            id=\"outlined-email-input\"\n                            label=\"Code\"\n                            name=\"code\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            style={{width: 450}}\n                            value={enteredCode}\n                            onChange={e => this.setState({enteredCode: e.target.value})}\n                        />\n\n                        <div style={{marginLeft:320,  cursor: 'pointer', textDecoration: 'underline'}} onClick={() => this.setState({showCodeField: false})}>Don't have a code?</div>\n                    </div>\n                ) : null}\n                {showCodeField ?\n                    <Button type='submit' variant='contained' onClick={this.submitCode}>submit</Button> :\n                    <div>\n                        <div style={{marginLeft:300,  cursor: 'pointer', textDecoration: 'underline'}} onClick={() => this.setState({showCodeField: true})}>Have a code already?</div>\n                        <Button type='submit' variant='contained' onClick={this.submitEmail}>send code</Button>\n                    </div>\n\n                }\n\n            </div>\n        )\n    }\n\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     this.setState({\n    //         userEmail: cookie.load('email') ?  cookie.load('email') : '',\n    //         userVerified: cookie.load('verified') ? cookie.load('verified') : false,\n    //     })\n    // }\n\n    handleCloseGiverForm = () => {\n        this.setState({showGiverForm: false})\n    };\n\n    render(){\n        const {userVerified, userEmail, enteredDate, showLogin, showLoginMessage, showInvalidMessage, showSuccessMessage, showGiverForm, enteredDiningHall} = this.state;\n        console.log(userVerified, userEmail)\n        return (\n            <div className=\"App\">\n                <div style={{fontSize:50, marginTop:10}}>Swipe Share</div>\n                <div style={{fontSize:20}}>A way to share your mealswipes!</div>\n                <br/>\n                {userEmail ? <div>\n                    <div>Logged in as {userEmail}.</div>\n                    <Button onClick={() => {\n                        this.setState({userEmail: '', userVerified: false})\n                        cookie.remove('email', { path: '/' })\n                        cookie.remove('verified', { path: '/' })\n                    }}>Logout</Button>\n                </div> : <Button  variant='contained' onClick={() => this.setState({showLogin: !showLogin})}>login</Button>}\n\n                {showLogin ? this.loginWindow() : null}\n                <br/>\n                <br/>\n                <Button  variant='contained' onClick={() => {\n                    if (!userVerified){\n                        console.log(\"NOT ALLOWED\");\n                        this.setState({showLoginMessage: true});\n                        return;\n                    }\n                    this.setState({showGiverForm: true}\n                    )}}>Give a swipe</Button>\n                <br/>\n                <br/>\n                <Cards userVerified={userVerified} userEmail={userEmail} showLoginM={() => this.setState({showLoginMessage: true})}/>\n                <Dialog fullWidth open={showGiverForm} onClose={this.handleCloseGiverForm} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle style={{fontSize: 100}} id=\"form-dialog-title\">Give a mealswipe!</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Please enter the information below:\n                        </DialogContentText>\n                        <InputLabel>Dining Hall</InputLabel>\n                        <Select\n                            style={{width:200}}\n                            value={enteredDiningHall}\n                            onChange={e => this.setState({enteredDiningHall: e.target.value})}\n                        >\n                            <MenuItem value='carmichael'>Carmichael</MenuItem>\n                            <MenuItem value='dewick'>Dewick</MenuItem>\n                            <MenuItem value='hodgdon'>Hodgdon</MenuItem>\n                        </Select>\n                    </DialogContent>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <Grid container justify=\"space-around\">\n                            <KeyboardDatePicker\n                                style={{fontsize: 20}}\n                                disableToolbar\n                                disablePast\n                                variant=\"inline\"\n                                format=\"MM/dd/yyyy\"\n                                margin=\"normal\"\n                                id=\"date-picker-inline\"\n                                label=\"Date\"\n                                value={enteredDate}\n                                onChange={newDate => this.setState({enteredDate: newDate})}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                            <br/>\n                            <KeyboardTimePicker\n                                margin=\"normal\"\n                                id=\"time-picker\"\n                                label=\"Time\"\n                                value={enteredDate}\n                                onChange={newDate => this.setState({enteredDate: newDate})}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change time',\n                                }}\n                            />\n                        </Grid>\n                    </MuiPickersUtilsProvider>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseGiverForm} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={() => {\n                            const body = {\n                                giver_email: userEmail,\n\n                            };\n                            fetch('https://swipeshareapi.herokuapp.com/sendcode',\n                                {method:'POST',\n                                    body:JSON.stringify(body),\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                    }})\n                                .then(response => response.status)\n                                .then(status => {\n                                    if (status !== 200){\n                                        console.log('big bad')\n                                    }\n                                }).catch(x => {\n                                console.log('no data', x)\n                                return('no data')\n                            })\n                        }} color=\"primary\">\n                            Submit\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Snackbar\n                    variant=\"error\"\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={showInvalidMessage}\n                    onClose={() => this.setState({showInvalidMessage: false})}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                    autoHideDuration={6000}\n                    message={<span id=\"message-id\">Not a @tufts.edu address!</span>}\n                    action={[\n                        <IconButton\n                            key=\"close\"\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            onClick={() => this.setState({showInvalidMessage: false})}\n                        >\n                            <CloseIcon />\n                        </IconButton>,\n                    ]}\n                />\n                <Snackbar\n                    variant=\"error\"\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={showSuccessMessage}\n                    onClose={() => this.setState({showSuccessMessage: false})}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                    autoHideDuration={6000}\n                    message={<span id=\"message-id\">Check your email for a code!</span>}\n\n                    action={[\n                        <IconButton\n                            key=\"close\"\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            onClick={() => this.setState({showSuccessMessage: false})}\n                        >\n                            <CloseIcon />\n                        </IconButton>,\n                    ]}\n                />\n                <Snackbar\n                    variant=\"error\"\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={showLoginMessage}\n                    onClose={() => this.setState({showLoginMessage: false})}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                    autoHideDuration={6000}\n                    message={<span id=\"message-id\">Please log in first!</span>}\n                    action={[\n                        <IconButton\n                            key=\"close\"\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            onClick={() => this.setState({showLoginMessage: false})}\n                        >\n                            <CloseIcon />\n                        </IconButton>,\n                    ]}\n                />\n                <div style={{marginTop: 30}}>Made with <span role=\"img\" aria-label='heart'>❤️</span>at Polyhack 2019</div>\n            </div>\n        );\n    }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}