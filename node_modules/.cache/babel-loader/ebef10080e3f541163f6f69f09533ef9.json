{"ast":null,"code":"var _jsxFileName = \"/Users/lawrencechan/coding/SwipeShare/src/Cards.js\";\nimport React from 'react';\nimport { Card } from \"@material-ui/core\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\n\nclass Cards extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.requestCards = () => {\n      this.setState({\n        cards: []\n      });\n      var request = new Request('https://swipeshareapi.herokuapp.com/', {\n        method: 'GET'\n      });\n      fetch(request).then(response => response.json()).then(data => {\n        this.setState({\n          cards: data.entries\n        });\n      }).catch(x => {\n        console.log('no data', x);\n        return 'no data';\n      });\n    };\n\n    this.state = {\n      cards: [],\n      filters: {\n        carmichael: true,\n        dewick: true,\n        hodgdon: true\n      },\n      selectedLocation: '',\n      selectedTime: null\n    };\n  }\n\n  makeUnavailableCard() {\n    return React.createElement(Card, {\n      key: \"unavailable\",\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"No meals available at this time\")));\n  }\n\n  makeUnavailableFiltersCard() {\n    return React.createElement(Card, {\n      key: \"unavailable\",\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"No meals available at this time for your selected filters.\")));\n  }\n\n  makeCard(theCardInfo) {\n    const _this$props = this.props,\n          userVerified = _this$props.userVerified,\n          userEmail = _this$props.userEmail,\n          showLoginM = _this$props.showLoginM;\n    const location = theCardInfo.location,\n          time = theCardInfo.time;\n    const theDate = new Date(time);\n    const timeString = theDate.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n    let finalString = timeString;\n\n    if (timeString.charAt(0) === '0') {\n      finalString = timeString.slice(1);\n    }\n\n    return React.createElement(Card, {\n      key: location + time + Math.random(),\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      align: \"left\",\n      style: {\n        marginLeft: '5%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, location.charAt(0).toUpperCase() + location.slice(1), \" - \", finalString)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(CardActions, {\n      align: \"right\",\n      style: {\n        justifyContent: 'flex-end'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"medium\",\n      onClick: () => {\n        if (userVerified && userEmail !== '') {\n          console.log('good');\n        } else {\n          showLoginM();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Request Meal\"))));\n  }\n\n  makeFilters() {\n    const filters = this.state.filters;\n    let toReturn = [];\n\n    if (filters.carmichael) {\n      toReturn.push('carmichael');\n    }\n\n    if (filters.dewick) {\n      toReturn.push('dewick');\n    }\n\n    if (filters.hodgdon) {\n      toReturn.push('hodgdon');\n    }\n\n    return toReturn;\n  }\n\n  cards() {\n    const cards = this.state.cards;\n    let toReturn = [];\n    const filtersList = this.makeFilters();\n    cards.forEach(x => {\n      if (filtersList.includes(x.location)) {\n        toReturn.push(this.makeCard(x));\n      }\n    });\n\n    if (toReturn.length === 0) {\n      return this.makeUnavailableFiltersCard();\n    }\n\n    return toReturn;\n  }\n\n  showOptions() {\n    const filters = this.state.filters;\n    const carmichael = filters.carmichael,\n          dewick = filters.dewick,\n          hodgdon = filters.hodgdon;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      className: \"chip\",\n      key: \"carm\",\n      label: \"Carmichael\",\n      clickable: true,\n      color: carmichael ? 'primary' : 'default',\n      onClick: () => this.setState({\n        filters: {\n          carmichael: !carmichael,\n          dewick: dewick,\n          hodgdon: hodgdon\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Chip, {\n      className: \"chip\",\n      key: \"dew\",\n      label: \"Dewick\",\n      clickable: true,\n      color: dewick ? 'primary' : 'default',\n      onClick: () => this.setState({\n        filters: {\n          carmichael: carmichael,\n          dewick: !dewick,\n          hodgdon: hodgdon\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(Chip, {\n      className: \"chip\",\n      key: \"hodge\",\n      label: \"Hodgdon\",\n      clickable: true,\n      color: hodgdon ? 'primary' : 'default',\n      onClick: () => this.setState({\n        filters: {\n          carmichael: carmichael,\n          dewick: dewick,\n          hodgdon: !hodgdon\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }));\n  }\n\n  componentDidMount() {\n    this.requestCards(); // setInterval(this.requestCards, 10000)\n  }\n\n  render() {\n    const cards = this.state.cards;\n    console.log(this.props);\n    const _this$props2 = this.props,\n          userVerified = _this$props2.userVerified,\n          userEmail = _this$props2.userEmail,\n          showLoginM = _this$props2.showLoginM;\n    return React.createElement(\"div\", {\n      style: {\n        marginLeft: '15%',\n        marginRight: '15%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        fontSize: 30,\n        textAlign: 'left',\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Available Meal Swipes:\"), this.showOptions(), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), cards.length === 0 ? this.makeUnavailableCard() : this.cards());\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/lawrencechan/coding/SwipeShare/src/Cards.js"],"names":["React","Card","CardContent","Typography","CardActions","Button","Chip","Cards","Component","constructor","props","requestCards","setState","cards","request","Request","method","fetch","then","response","json","data","entries","catch","x","console","log","state","filters","carmichael","dewick","hodgdon","selectedLocation","selectedTime","makeUnavailableCard","marginBottom","makeUnavailableFiltersCard","makeCard","theCardInfo","userVerified","userEmail","showLoginM","location","time","theDate","Date","timeString","toLocaleTimeString","hour","minute","finalString","charAt","slice","Math","random","marginLeft","toUpperCase","justifyContent","makeFilters","toReturn","push","filtersList","forEach","includes","length","showOptions","componentDidMount","render","marginRight","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Card} from \"@material-ui/core\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\n\nclass Cards extends React.Component{\n\n    requestCards = () => {\n        this.setState({\n            cards: []\n        });\n        var request = new Request('https://swipeshareapi.herokuapp.com/', {method:'GET'});\n        fetch(request)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({cards: data.entries})\n            }).catch(x => {\n            console.log('no data', x)\n            return('no data')\n        })\n    }\n\n    constructor(props){\n        super(props);\n        this.state = {\n            cards:[],\n            filters: {\n                carmichael: true,\n                dewick: true,\n                hodgdon: true\n            },\n            selectedLocation: '',\n            selectedTime: null\n        }\n\n    }\n    makeUnavailableCard(){\n        return(\n            <Card key='unavailable' style={{marginBottom:10}}>\n                <CardContent>\n                    <Typography variant='h6' align='center'>\n                        No meals available at this time\n                    </Typography>\n                </CardContent>\n            </Card>\n        )\n    }\n\n    makeUnavailableFiltersCard(){\n        return(\n            <Card key='unavailable' style={{marginBottom:10}}>\n                <CardContent>\n                    <Typography variant='h6' align='center'>\n                        No meals available at this time for your selected filters.\n                    </Typography>\n                </CardContent>\n            </Card>\n        )\n    }\n\n    makeCard(theCardInfo){\n        const {userVerified, userEmail, showLoginM} = this.props;\n        const {location, time} = theCardInfo;\n        const theDate = new Date(time);\n        const timeString = theDate.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n        let finalString = timeString;\n        if (timeString.charAt(0) === '0'){\n            finalString = timeString.slice(1);\n        }\n        return(\n            <Card key={location+time+Math.random()} style={{marginBottom:10}}>\n                <CardContent>\n                    <Typography variant='h5' align='left' style={{marginLeft:'5%'}}>\n                        {location.charAt(0).toUpperCase() + location.slice(1) } - {finalString}\n                    </Typography>\n                </CardContent>\n                <div>\n                    <CardActions align='right' style={{justifyContent: 'flex-end'}}>\n                        <Button size=\"medium\" onClick={() => {\n                            if (userVerified && userEmail !== ''){\n                                console.log('good')\n                            } else {\n                                showLoginM()\n                            }\n                        }}>Request Meal</Button>\n                    </CardActions>\n                </div>\n\n            </Card>\n\n        )\n    }\n\n    makeFilters(){\n        const {filters} = this.state;\n        let toReturn = [];\n        if (filters.carmichael){\n            toReturn.push('carmichael')\n        }\n        if (filters.dewick){\n            toReturn.push('dewick')\n        }\n        if (filters.hodgdon){\n            toReturn.push('hodgdon')\n        }\n\n        return toReturn\n    }\n    cards(){\n        const {cards} = this.state;\n        let toReturn = [];\n        const filtersList = this.makeFilters();\n        cards.forEach(x => {\n                if (filtersList.includes(x.location)){\n                    toReturn.push(this.makeCard(x))}\n            }\n        );\n\n        if (toReturn.length === 0){\n            return this.makeUnavailableFiltersCard()\n\n        }\n        return toReturn\n    }\n\n    showOptions(){\n        const {filters} = this.state;\n        const {carmichael, dewick, hodgdon} = filters;\n        return(\n            <div>\n                <Chip\n                    className=\"chip\"\n                    key='carm'\n                    label='Carmichael'\n                    clickable\n                    color={carmichael ? 'primary' : 'default'}\n                    onClick={() => this.setState({filters: {\n                            carmichael: !carmichael, dewick: dewick, hodgdon: hodgdon\n                        }})}\n                />\n                <Chip\n                    className=\"chip\"\n                    key='dew'\n                    label='Dewick'\n                    clickable\n                    color={dewick ? 'primary' : 'default'}\n                    onClick={() => this.setState({filters: {\n                            carmichael: carmichael, dewick: !dewick, hodgdon: hodgdon\n                        }})}\n                />\n                <Chip\n                    className=\"chip\"\n                    key='hodge'\n                    label='Hodgdon'\n                    clickable\n                    color={hodgdon ? 'primary' : 'default'}\n                    onClick={() => this.setState({filters: {\n                            carmichael: carmichael, dewick: dewick, hodgdon: !hodgdon\n                        }})}\n                />\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        this.requestCards()\n        // setInterval(this.requestCards, 10000)\n    }\n\n    render() {\n        const {cards} = this.state;\n        console.log(this.props)\n        const {userVerified, userEmail, showLoginM} = this.props;\n\n        return(\n            <div style={{marginLeft:'15%', marginRight: '15%'}}>\n                <div style={{fontSize:30, textAlign:'left', marginBottom:10}}>Available Meal Swipes:</div>\n                {this.showOptions()}\n                <br/>\n                {cards.length === 0 ? this.makeUnavailableCard() : this.cards()}\n            </div>\n        )\n    }\n}\n\nexport default Cards;"]},"metadata":{},"sourceType":"module"}